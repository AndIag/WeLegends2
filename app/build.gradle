apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion
    defaultConfig {
        applicationId "com.andiag.welegends.remake"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.compileSdkVersion
        versionCode project.libraryCode
        versionName project.libraryName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "HttpLoggingInterceptorLevel", "\"${getRetrofitLoggingLevel()}\""
            buildConfigField "String", "AndIagApi", "\"${getAndIagApi()}\""
            buildConfigField "String", "ApiKey", "\"${getApiKey()}\""
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "HttpLoggingInterceptorLevel", "NONE"
            buildConfigField "String", "AndIagApi", "\"${getAndIagApi()}\""
            buildConfigField "String", "ApiKey", "\"${getApiKey()}\""
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
    }
}

configurations.all {
    resolutionStrategy {
        eachDependency { details ->
            // Force all of the primary support libraries to use the same version.
            if (details.requested.group == 'com.android.support') {
                details.useVersion supportLib
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile "junit:junit:4.12"
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile "org.mockito:mockito-core:2.8.47"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin"

    compile "com.android.support:design:$supportLib"
    compile "com.android.support:cardview-v7:$supportLib"
    compile "com.android.support:preference-v14:$supportLib"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    // Must
    compile "com.jakewharton:butterknife:$butterknife"
    compile "com.squareup.retrofit2:retrofit:$retrofit"
    compile "com.squareup.retrofit2:converter-gson:$retrofit"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp"
    compile "com.andretietz.retroauth:retroauth-android:2.2.1"
    compile "com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.27"
    compile 'org.jetbrains.anko:anko-sdk19:0.10.1'

    //Database
    compile "com.github.Raizlabs.DBFlow:dbflow-core:$dbflow"
    compile "com.github.Raizlabs.DBFlow:dbflow:$dbflow"
    compile "com.github.Raizlabs.DBFlow:dbflow-rx2-kotlinextensions:$dbflow"

    // RX Java
    compile "io.reactivex.rxjava2:rxandroid:2.0.1"
    compile "io.reactivex.rxjava2:rxjava:2.1.2"

    // UI
    compile "com.github.bumptech.glide:glide:3.8.0"
    compile "uk.co.chrisjenx:calligraphy:$caligraphy"
    compile 'com.github.GrenderG:Toasty:1.2.5'
    compile 'com.github.siyamed:android-shape-imageview:0.9.3@aar'
    compile 'com.github.florent37:diagonallayout:1.0.7'
    compile 'com.github.andy135:StatedLayout:1.0.0'
    compile('com.hariofspades.gradientartist:gradientartist:0.0.1', {
        exclude group: 'com.github.bumptech.glide', module: 'glide'
    })

    compile 'com.github.iagocanalejas.andiag-mvp:commons:0.4'

    // LeakCanary
    debugCompile "com.squareup.leakcanary:leakcanary-android:1.5.1"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:1.5.1"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:1.5.1"

    kapt "com.jakewharton:butterknife-compiler:$butterknife"
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:$dbflow"
    compile project(path: ':core')
}

def getRetrofitLoggingLevel() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    return properties.getProperty('HttpLoggingInterceptorLevel', "BODY")
}

def getAndIagApi() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    return properties.getProperty('AndIagApi', "http://andiag-prod.apigee.net/v1/test-welegends/")
}

def getApiKey() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    return properties.getProperty('ApiKey', "")
}
